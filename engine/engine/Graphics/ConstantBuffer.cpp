#include "engine/pch.h"
#include "ConstantBuffer.hpp"

////////////////////////////////////////////////////////////////
//////////////////////////// Define ////////////////////////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//////////////////////////// Static ////////////////////////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
/////////////////////// Standalone Function ////////////////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
///////////////////////// Member Function //////////////////////
////////////////////////////////////////////////////////////////

ConstantBuffer::ConstantBuffer( size_t size, eAllocationType allocationType )
   : Buffer( size, eBindingFlag::ConstantBuffer, eBufferUsage::Default, allocationType )
 , mCpuCache( size )
{
   void* data = alloca( size );
   mCpuCache.Set( data, size, 0 );
}

void ConstantBuffer::SetData( void* data, size_t size, size_t offset )
{
   mCpuCache.Set( data, size, offset );
   mIsDirty = true;
}

void ConstantBuffer::UploadGpu( CommandList* list )
{
   if(mHandle == nullptr) {
      Init();
   }

   if(!mIsDirty) return;
   UpdateData( mCpuCache.Data(), mCpuCache.Size(), 0, list );
   mIsDirty = false;
}
