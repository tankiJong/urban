#include "engine/pch.h"
#include "Resource.hpp"
#include "Device.hpp"

////////////////////////////////////////////////////////////////
//////////////////////////// Define ////////////////////////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//////////////////////////// Static ////////////////////////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
/////////////////////// Standalone Function /////////////////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
///////////////////////// Member Function //////////////////////
////////////////////////////////////////////////////////////////


Resource::Resource( eType type, eBindingFlag bindingFlags, eAllocationType allocationType )
   : mType( type )
   , mBindingFlags( bindingFlags )
   , mAllocationType( allocationType ) {}

Resource::Resource(
   const resource_handle_t& handle,
   eType                    type,
   eBindingFlag             bindingFlags,
   eAllocationType          allocationType )
   : WithHandle<resource_handle_t>( handle )
   , mType( type )
   , mBindingFlags( bindingFlags )
   , mAllocationType( allocationType ) {}

Resource::~Resource()
{
   Device::Get().RelaseObject( mHandle );
}

void  Resource::SetGlobalState(eState state) const
{
   ASSERT_DIE( !mState.globalInTransition );
   for(bool inTransition: mState.subresourceInTransition) {
      ASSERT_DIE( !inTransition );
   }

   mState.global = true;
   mState.globalState = state;
};
