#include "engine/pch.h"
#include "engine/graphics/Device.hpp"
#include "engine/graphics/CommandBuffer.hpp"
#include "engine/graphics/CommandList.hpp"
#include "engine/platform/win.hpp"

////////////////////////////////////////////////////////////////
//////////////////////////// Define ////////////////////////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//////////////////////////// Static ////////////////////////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
/////////////////////// Standalone Function /////////////////////
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
///////////////////////// Member Function //////////////////////
////////////////////////////////////////////////////////////////

void CommandBuffer::Init( Device& device )
{
   assert_win(device.NativeDevice()->CreateCommandAllocator( D3D12_COMMAND_LIST_TYPE_DIRECT, IID_PPV_ARGS( &mHandle) ));
   mLastUpdateFrame = 0;
}

void CommandBuffer::Reset()
{
   mHandle->Reset();
}

void CommandBuffer::Bind( CommandList& commandList )
{
   assert_win(commandList.Handle()->Reset( mHandle.Get(), nullptr ));
}
